apiVersion: apps/v1
kind: Deployment
metadata:
  name: perfectpick-api
  namespace: perfectpick
  labels:
    app: perfectpick-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: perfectpick-api
  template:
    metadata:
      labels:
        app: perfectpick-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: perfectpick
        image: bhupencod3v1.0
        ports:
        - containerPort: 8000
        env:
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: perfectpick-secrets
              key: DB_URL
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: perfectpick-secrets
              key: GROQ_API_KEY
        - name: ASTRA_DB_APPLICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: perfectpick-secrets
              key: ASTRA_DB_APPLICATION_TOKEN
        - name: ASTRA_DB_API_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: perfectpick-secrets
              key: ASTRA_DB_API_ENDPOINT
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: perfectpick-secrets
              key: HF_TOKEN
        - name: DATA_FILE_PATH
          valueFrom:
            configMapKeyRef:
              name: perfectpick-app-config
              key: DATA_FILE_PATH
        - name: HF_HOME
          valueFrom:
            configMapKeyRef:
              name: perfectpick-app-config
              key: HF_HOME
        - name: ASTRA_DB_KEYSPACE
          valueFrom:
            configMapKeyRef:
              name: perfectpick-app-config
              key: ASTRA_DB_KEYSPACE
        - name: ASTRA_DB_COLLECTION_NAME
          valueFrom:
            configMapKeyRef:
              name: perfectpick-app-config
              key: ASTRA_DB_COLLECTION_NAME
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: cache-volume
          mountPath: /app/.cache
      volumes:
      - name: cache-volume
        emptyDir: {}
      dnsConfig:
        nameservers:
          - 8.8.8.8
          - 1.1.1.1