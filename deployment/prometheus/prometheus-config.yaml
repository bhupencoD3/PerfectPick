apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "alerting_rules.yml"
    
    scrape_configs:
      - job_name: 'perfectpick-api'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - perfectpick
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app]
          regex: perfectpick-api
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          regex: http
          action: keep
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
    
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
    
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
    
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

  alerting_rules.yml: |
    groups:
    - name: perfectpick-alerts
      rules:
      - alert: HighMemoryUsage
        expr: container_memory_usage_bytes{container="perfectpick"} > 1.5e9
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on perfectpick"
          description: "Container {{ $labels.container }} in pod {{ $labels.pod }} has high memory usage ({{ $value }} bytes)"
      
      - alert: HighCPUUsage
        expr: rate(container_cpu_usage_seconds_total{container="perfectpick"}[5m]) > 0.8
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on perfectpick"
          description: "Container {{ $labels.container }} in pod {{ $labels.pod }} has high CPU usage ({{ $value }})"
      
      - alert: PodDown
        expr: up{job="perfectpick-api"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "perfectpick API pod is down"
          description: "Pod {{ $labels.pod }} has been down for more than 1 minute"